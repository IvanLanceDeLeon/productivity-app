{"version":3,"sources":["sounds/fanfare.mp3","components/Clock.js","components/Timer.js","components/ToDo.js","components/QoD.js","components/Planner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","date","Date","time","this","timerID","setInterval","tick","setTime","clearInterval","curHr","getHours","setState","className","toLocaleTimeString","React","Component","sound","UIFx","beep","setVolume","start","backgroundColor","border","color","padding","textAlign","textDecoration","display","fontSize","sbreak","long","Timer","minutes","seconds","startTimer","bind","startPomodoro","shortBreak","longBreak","pomodoro","play","style","onClick","divStyle","marginLeft","listStyleType","ToDo","tasks","newTask","value","delTask","handleChange","handleSubmit","event","target","task","id","Math","random","preventDefault","console","log","newList","filter","map","onSubmit","type","onChange","QoD","quote","author","i","floor","fetch","res","json","data","text","Planner","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.725afb8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fanfare.ecec05ce.mp3\";","import React from 'react';\r\n\r\n\r\n\r\n\r\nclass Clock extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            date : new Date(),\r\n            time : \" \"\r\n        }\r\n    }\r\n\r\n    \r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n        () => this.tick(),\r\n        1000\r\n      );\r\n\r\n    this.setTime()\r\n    \r\n    \r\n}\r\n\r\ncomponentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n}\r\nsetTime(){\r\n    let curHr = this.state.date.getHours()\r\n    if (curHr < 12) {\r\n        this.setState({\r\n            time : \"Morning\"\r\n        })\r\n      } else if (curHr < 18) {\r\n        this.setState({\r\n            time : \"Afternoon\"\r\n        })      } else {\r\n            this.setState({\r\n                time : \"Evening\"\r\n            })      }\r\n}\r\ntick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n\r\n\r\n    render(){\r\n        return(<div>\r\n        <h1 className = \"greeting\">Good {this.state.time}!</h1>\r\n        <h2 className = \"time\"> The time is now: {this.state.date.toLocaleTimeString()}</h2>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock; ","import React from 'react';\r\nimport UIFx from 'uifx';\r\n\r\nimport beep from '../sounds/fanfare.mp3'\r\n\r\nconst sound = new UIFx(beep);\r\nsound.setVolume(.5);\r\nconst start = {\r\n    backgroundColor: '#4CAF50', /* Green */\r\n    border: 'none',\r\n    color: 'white',\r\n    padding: '15px 32px',\r\n    textAlign: 'center',\r\n    textDecoration: 'none',\r\n    display: 'inline-block',\r\n    fontSize: '16px'\r\n}\r\nconst sbreak = {\r\n    backgroundColor: 'Red', /* Green */\r\n    border: 'none',\r\n    color: 'white',\r\n    padding: '15px 32px',\r\n    textAlign: 'center',\r\n    textDecoration: 'none',\r\n    display: 'inline-block',\r\n    fontSize: '16px'\r\n}\r\nconst long = {\r\n    backgroundColor: 'Blue', /* Green */\r\n    border: 'none',\r\n    color: 'white',\r\n    padding: '15px 32px',\r\n    textAlign: 'center',\r\n    textDecoration: 'none',\r\n    display: 'inline-block',\r\n    fontSize: '16px'\r\n}\r\nclass Timer extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            minutes: '0',\r\n            seconds: '0'\r\n        }\r\n\r\n        this.startTimer = this.startTimer.bind(this)\r\n        this.tick = this.tick.bind(this)\r\n        this.startPomodoro = this.startPomodoro.bind(this)\r\n        this.shortBreak = this.shortBreak.bind(this)\r\n        this.longBreak = this.longBreak.bind(this)\r\n    }\r\n\r\n\r\n    startTimer(){\r\n        clearInterval(this.pomodoro)\r\n\r\n        this.setState({\r\n            minutes:'25',\r\n            seconds:'0'\r\n        })\r\n        this.startPomodoro()\r\n    }\r\n\r\n    shortBreak(){\r\n        clearInterval(this.pomodoro)\r\n\r\n        this.setState({\r\n            minutes:'5',\r\n            seconds:'0'\r\n        })\r\n        this.startPomodoro()\r\n    }\r\n\r\n    longBreak(){\r\n        clearInterval(this.pomodoro)\r\n\r\n        this.setState({\r\n            minutes:'15',\r\n            seconds:'0'\r\n        })\r\n        this.startPomodoro()\r\n    }\r\n\r\n    tick(){\r\n\r\n        this.setState({\r\n            seconds: this.state.seconds -1\r\n        })\r\n        if(this.state.seconds < 0){\r\n            this.setState({\r\n                minutes: this.state.minutes -1,\r\n                seconds: '59'\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    startPomodoro(){this.pomodoro= setInterval(() => {this.tick()\r\n        if(this.state.minutes <0){\r\n            sound.play();\r\n\r\n            clearInterval(this.pomodoro)\r\n            \r\n        }},1000)\r\n\r\n\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(<div className = \"timer\">\r\n            <h1 className = \"header\">Timer</h1>\r\n            <h2>{this.state.minutes}:{this.state.seconds}</h2>\r\n            <button style = {start} onClick = {this.startTimer}>Start</button>\r\n            <button style = {sbreak} onClick = {this.shortBreak}>Break</button>\r\n            <button style = {long} onClick = {this.longBreak}>Long Break</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport {FaTrashAlt} from 'react-icons/fa';\r\nconst divStyle = {\r\n    marginLeft: '10px',\r\n    padding: 0,\r\n    textAlign:'left',\r\n    listStyleType: 'square'\r\n}\r\nclass ToDo extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            tasks: [],\r\n            newTask : '',\r\n            value : ' '\r\n        }\r\n        this.delTask = this.delTask.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }    \r\n    \r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.setState({\r\n        tasks: [...this.state.tasks,{task:this.state.value, id:Math.random()}]\r\n    })\r\n    this.setState({\r\n        value: ''\r\n    })\r\n    event.preventDefault();\r\n  }\r\n\r\n  delTask(id){\r\n      console.log(id)\r\n    var newList = this.state.tasks.filter(task => task.id !== id)\r\n    this.setState({tasks:newList})\r\n   \r\n  }\r\n\r\n    render(){\r\n        const{tasks} = this.state;\r\n        return(\r\n            <div className = \"todo\" style = {divStyle}>\r\n                <h2 className = \"header\" style = {{textAlign:\"center\"}}>ToDo List</h2>\r\n                <ul style = {divStyle}className = \"ToDo\">\r\n                    {tasks.map(task => (\r\n                        <li style = {divStyle}>{task.task} <FaTrashAlt onClick = {()=>this.delTask(task.id)}/> </li>\r\n                    ))}\r\n                </ul>\r\n                <form onSubmit = {this.handleSubmit}>\r\n                <label>New Task : </label>\r\n                    <input type = \"text\" value = {this.state.value} onChange = {this.handleChange}/>\r\n                    <input type = \"submit\" value = \"Submit\"></input>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDo;","import React from 'react'\r\nimport './fonts.css';\r\n\r\nclass QoD extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {quote : '',\r\n                        author: ''}\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const i = Math.floor(Math.random() * 1000);\r\n        const API =  'https://type.fit/api/quotes'\r\n        const res = await fetch(API);\r\n        const data = await res.json();\r\n        this.setState({quote: data[i].text,\r\n                        author: data[i].author})\r\n        console.log(data)\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"qod\">\r\n                <h1 className = \"quote\"> {this.state.quote}</h1>\r\n                <h1 className = \"author\">  ~{this.state.author}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QoD","import React from 'react'\r\nimport Calendar from 'react-calendar'\r\n\r\n\r\nclass Planner extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            date: new Date(),\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n\r\n    }\r\n    onChange = date => this.setState({date:date})\r\n\r\n    render(){\r\n        return(\r\n\r\n            <Calendar\r\n            onChange={this.onChange}\r\n            value={this.state.date}></Calendar>        )\r\n    }\r\n}\r\n\r\nexport default Planner;","import React from 'react';\nimport Clock from './components/Clock'\nimport Timer from './components/Timer'\nimport ToDo from './components/ToDo'\nimport QoD from './components/QoD'\nimport Planner from './components/Planner'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Clock></Clock>\n      <div className = \"modules\">\n      <div  className = \"timer\"><Timer></Timer></div>\n      <div className = \"toDo\"><ToDo></ToDo></div>\n      <Planner></Planner>\n      </div>\n      <QoD></QoD>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}